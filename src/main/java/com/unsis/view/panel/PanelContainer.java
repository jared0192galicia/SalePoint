package com.unsis.view.panel;

import com.unsis.models.constants.Constants;
import com.unsis.view.Main;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Insets;
import java.util.ArrayList;
import java.util.HashSet;
import javax.swing.JButton;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;

public class PanelContainer extends javax.swing.JPanel {

    private final ArrayList<JButton> areas;
    private final Main mainWindow;

    public PanelContainer(Main main) {
        this.mainWindow = main;
        initComponents();
        areas = new ArrayList<>();
        this.generateAreas();
    }

    /**
     * Generate opcions in nav var for area.
     *
     * @param area Area of the sections
     * @param parent Component parent for add opctions
     * @return Menu with all options for it area
     */
    private JPopupMenu generateOptions(String area, JButton parent) {
        JPopupMenu menu = new JPopupMenu();
        JMenuItem item;
        for (Constants.Section section : Constants.sections) {
            if (section.getArea().equals(area) && !(excudeSections(section))) {
                item = new JMenuItem(section.getNombre());
                item.setToolTipText(section.getDescripcion());
                item.setForeground(Color.WHITE);
                item.setBackground(new Color(60, 75, 112));
                item.setOpaque(true);
                item.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
                item.setPreferredSize(new Dimension(parent.getWidth() - 5, item.getPreferredSize().height));

                item.addActionListener((e) -> {
                    mainWindow.setView(section.getNombre());
                    mainWindow.addPanelHistory(section.getNombre());
                });
                menu.add(item);
            }
        }

        return menu;
    }
    
    private boolean excudeSections(Constants.Section section) {
        return section.getNombre().equals("Editar Empleados") || 
                section.getNombre().equals("Editar Productos");
    }

    /**
     * Generate JButtons for ToolBar with the names of the areas with access for
     * user logger
     */
    private void generateAreas() {
        ArrayList<String> titleAreas = new ArrayList<>();

        for (Constants.Section section : Constants.sections) {
            titleAreas.add(section.getArea());
        }

        HashSet<String> areasSet = new HashSet<>(titleAreas);

        for (String area : areasSet) {
            final JButton buttonWrapper = new JButton(area); // Envuelve 'button' en un array final
            buttonWrapper.setBackground(new Color(17, 57, 103));
            buttonWrapper.setForeground(Color.WHITE);
            buttonWrapper.setFont(new Font("Dialog", Font.BOLD, 12));
            buttonWrapper.setBorder(buttonHomeware.getBorder());
            buttonWrapper.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
            buttonWrapper.setFocusPainted(true);
            buttonWrapper.setMargin(new Insets(2, 14, 2, 14));
            buttonWrapper.setMaximumSize(new Dimension(220, 30));
            buttonWrapper.setPreferredSize(new Dimension(220, 30));
            buttonWrapper.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseEntered(java.awt.event.MouseEvent evt) {
                    buttonWrapper.setForeground(new Color(17, 57, 103));
                    buttonWrapper.setBackground(Color.WHITE);
                }
            });

            buttonWrapper.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseExited(java.awt.event.MouseEvent evt) {
                    buttonWrapper.setBackground(new Color(17, 57, 103));
                    buttonWrapper.setForeground(Color.WHITE);
                }
            });

            buttonWrapper.addActionListener((e) -> {
                generateOptions(area, buttonWrapper).show(buttonWrapper, 0, buttonWrapper.getHeight());
                buttonWrapper.setForeground(Color.WHITE);
                
                buttonWrapper.setBackground(new Color(17, 57, 103));
            });

            this.areas.add(buttonWrapper);
        }

        for (JButton area : this.areas) {
            toolBar.add(area);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelHomewore = new javax.swing.JLabel();
        menuHomeware = new javax.swing.JPopupMenu();
        buttonHomeware = new javax.swing.JButton();
        toolBar = new javax.swing.JToolBar();

        labelHomewore.setBackground(new java.awt.Color(17, 57, 103));
        labelHomewore.setForeground(new java.awt.Color(255, 255, 255));
        labelHomewore.setText("Almac√©n");

        menuHomeware.setBackground(new java.awt.Color(60, 75, 112));
        menuHomeware.setForeground(new java.awt.Color(255, 255, 255));
        menuHomeware.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        buttonHomeware.setBackground(new java.awt.Color(17, 57, 103));
        buttonHomeware.setForeground(new java.awt.Color(255, 255, 255));
        buttonHomeware.setText("Almacen");
        buttonHomeware.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonHomeware.setContentAreaFilled(false);
        buttonHomeware.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonHomeware.setFocusable(false);
        buttonHomeware.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        buttonHomeware.setMaximumSize(new java.awt.Dimension(220, 30));
        buttonHomeware.setPreferredSize(new java.awt.Dimension(220, 30));
        buttonHomeware.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHomewareActionPerformed(evt);
            }
        });

        setBackground(new java.awt.Color(60, 75, 112));
        setOpaque(false);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        toolBar.setBackground(new java.awt.Color(7, 56, 112));
        toolBar.setBorder(null);
        toolBar.setFloatable(false);
        toolBar.setOrientation(javax.swing.SwingConstants.VERTICAL);
        toolBar.setMaximumSize(new java.awt.Dimension(220, 50));
        toolBar.setMinimumSize(new java.awt.Dimension(220, 106));
        toolBar.setOpaque(false);
        toolBar.setPreferredSize(new java.awt.Dimension(220, 106));
        add(toolBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(-4, -5, 220, 200));
    }// </editor-fold>//GEN-END:initComponents

    private void buttonHomewareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHomewareActionPerformed
        menuHomeware.show(buttonHomeware, 5, buttonHomeware.getHeight());
    }//GEN-LAST:event_buttonHomewareActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonHomeware;
    private javax.swing.JLabel labelHomewore;
    private javax.swing.JPopupMenu menuHomeware;
    private javax.swing.JToolBar toolBar;
    // End of variables declaration//GEN-END:variables
}
